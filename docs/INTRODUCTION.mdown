### Why another React library?

There are a few reasons I wanted to make another clojurescript react wrapping library:

Show tries to focus on the responsibility of representation of state. React does not solve the problem of state management, but how that state should be rendered. I love that components are a function over the current state of the system (or a selective part of that state). 

Components should be simple: 

- I accept a set of props and I know how to render them
- If I notice those props change, I rerender myself, if not, I chill
- I can facilitate user actions that might change my props, but I don't really care how it gets changed
- I _also can_ create my own local state, with an understanding that it only should be used to help accomplish what __I__ need to do

Some of these 